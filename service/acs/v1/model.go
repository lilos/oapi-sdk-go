// Code generated by lark suite oapi sdk gen
package v1

import (
	"github.com/larksuite/oapi-sdk-go/api/core/tools"
	"github.com/larksuite/oapi-sdk-go/event/core/model"
)

type UserId struct {
	UserId          string   `json:"user_id,omitempty"`
	OpenId          string   `json:"open_id,omitempty"`
	UnionId         string   `json:"union_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UserId) MarshalJSON() ([]byte, error) {
	type cp UserId
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Device struct {
	DeviceId        int64    `json:"device_id,omitempty,string"`
	DeviceName      string   `json:"device_name,omitempty"`
	DeviceSn        string   `json:"device_sn,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Device) MarshalJSON() ([]byte, error) {
	type cp Device
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AccessRecord struct {
	AccessRecordId  int64    `json:"access_record_id,omitempty,string"`
	UserId          string   `json:"user_id,omitempty"`
	DeviceId        int64    `json:"device_id,omitempty,string"`
	IsClockIn       bool     `json:"is_clock_in,omitempty"`
	AccessTime      int64    `json:"access_time,omitempty,string"`
	AccessType      string   `json:"access_type,omitempty"`
	AccessData      string   `json:"access_data,omitempty"`
	IsDoorOpen      bool     `json:"is_door_open,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AccessRecord) MarshalJSON() ([]byte, error) {
	type cp AccessRecord
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Feature struct {
	Card            int      `json:"card,omitempty"`
	FaceUploaded    bool     `json:"face_uploaded,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Feature) MarshalJSON() ([]byte, error) {
	type cp Feature
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type User struct {
	Feature         *Feature `json:"feature,omitempty"`
	UserId          string   `json:"user_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *User) MarshalJSON() ([]byte, error) {
	type cp User
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AccessRecordListResult struct {
	Items     []*AccessRecord `json:"items,omitempty"`
	PageToken string          `json:"page_token,omitempty"`
	HasMore   bool            `json:"has_more,omitempty"`
}

type DeviceListResult struct {
	Items []*Device `json:"items,omitempty"`
}

type UserGetResult struct {
	User *User `json:"user,omitempty"`
}

type UserListResult struct {
	Items     []*User `json:"items,omitempty"`
	PageToken string  `json:"page_token,omitempty"`
	HasMore   bool    `json:"has_more,omitempty"`
}

type AccessRecordCreatedEventData struct {
	AccessRecordId string  `json:"access_record_id,omitempty"`
	UserId         *UserId `json:"user_id,omitempty"`
	DeviceId       string  `json:"device_id,omitempty"`
	IsClockIn      bool    `json:"is_clock_in,omitempty"`
	IsDoorOpen     bool    `json:"is_door_open,omitempty"`
	AccessTime     string  `json:"access_time,omitempty"`
}

type AccessRecordCreatedEvent struct {
	*model.BaseEventV2
	Event *AccessRecordCreatedEventData `json:"event"`
}

type UserUpdatedEventData struct {
	UserId       *UserId `json:"user_id,omitempty"`
	Card         int     `json:"card,omitempty"`
	FaceUploaded bool    `json:"face_uploaded,omitempty"`
}

type UserUpdatedEvent struct {
	*model.BaseEventV2
	Event *UserUpdatedEventData `json:"event"`
}

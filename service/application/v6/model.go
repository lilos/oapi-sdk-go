// Code generated by lark suite oapi sdk gen
package v6

import (
	"github.com/larksuite/oapi-sdk-go/api/core/tools"
	"github.com/larksuite/oapi-sdk-go/event/core/model"
)

type UserId struct {
	UserId          string   `json:"user_id,omitempty"`
	OpenId          string   `json:"open_id,omitempty"`
	UnionId         string   `json:"union_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UserId) MarshalJSON() ([]byte, error) {
	type cp UserId
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppAbility struct {
	Gadget           *Gadget            `json:"gadget,omitempty"`
	WebApp           *WebApp            `json:"web_app,omitempty"`
	Bot              *Bot               `json:"bot,omitempty"`
	WorkplaceWidgets []*WorkplaceWidget `json:"workplace_widgets,omitempty"`
	Navigate         *Navigate          `json:"navigate,omitempty"`
	CloudDoc         *CloudDoc          `json:"cloud_doc,omitempty"`
	DocsBlocks       []*DocsBlock       `json:"docs_blocks,omitempty"`
	MessageAction    *MessageAction     `json:"message_action,omitempty"`
	PlusMenu         *PlusMenu          `json:"plus_menu,omitempty"`
	ForceSendFields  []string           `json:"-"`
}

func (s *AppAbility) MarshalJSON() ([]byte, error) {
	type cp AppAbility
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppBadge struct {
	UserId          int64           `json:"user_id,omitempty,string"`
	Version         int64           `json:"version,omitempty,string"`
	Pc              *ClientBadgeNum `json:"pc,omitempty"`
	Mobile          *ClientBadgeNum `json:"mobile,omitempty"`
	ForceSendFields []string        `json:"-"`
}

func (s *AppBadge) MarshalJSON() ([]byte, error) {
	type cp AppBadge
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppCommonCategory struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Category        string   `json:"category,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppCommonCategory) MarshalJSON() ([]byte, error) {
	type cp AppCommonCategory
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppCustomCategory struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Description     string   `json:"description,omitempty"`
	AppIds          []string `json:"app_ids,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppCustomCategory) MarshalJSON() ([]byte, error) {
	type cp AppCustomCategory
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppCustomCategoryI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppCustomCategoryI18nInfo) MarshalJSON() ([]byte, error) {
	type cp AppCustomCategoryI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Name            string   `json:"name,omitempty"`
	Description     string   `json:"description,omitempty"`
	HelpUse         string   `json:"help_use,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppI18nInfo) MarshalJSON() ([]byte, error) {
	type cp AppI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppMessageTrendItem struct {
	ChatType        string            `json:"chat_type,omitempty"`
	EventType       string            `json:"event_type,omitempty"`
	MessageType     string            `json:"message_type,omitempty"`
	Trend           []*UsageTrendItem `json:"trend,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppMessageTrendItem) MarshalJSON() ([]byte, error) {
	type cp AppMessageTrendItem
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppScope struct {
	Scope           string   `json:"scope,omitempty"`
	Description     string   `json:"description,omitempty"`
	Level           string   `json:"level,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppScope) MarshalJSON() ([]byte, error) {
	type cp AppScope
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppScopeI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Description     string   `json:"description,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppScopeI18nInfo) MarshalJSON() ([]byte, error) {
	type cp AppScopeI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppScopes struct {
	HighLevelScopes []string `json:"high_level_scopes,omitempty"`
	LowLevelScopes  []string `json:"low_level_scopes,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppScopes) MarshalJSON() ([]byte, error) {
	type cp AppScopes
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppUsageTrendItems struct {
	Id              string            `json:"id,omitempty"`
	Trend           []*UsageTrendItem `json:"trend,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppUsageTrendItems) MarshalJSON() ([]byte, error) {
	type cp AppUsageTrendItems
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppVersionId struct {
	Version         string   `json:"version,omitempty"`
	VersionId       string   `json:"version_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppVersionId) MarshalJSON() ([]byte, error) {
	type cp AppVersionId
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppVersionRemark struct {
	Remark          string         `json:"remark,omitempty"`
	UpdateRemark    string         `json:"update_remark,omitempty"`
	Visibility      *AppVisibility `json:"visibility,omitempty"`
	ForceSendFields []string       `json:"-"`
}

func (s *AppVersionRemark) MarshalJSON() ([]byte, error) {
	type cp AppVersionRemark
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppVisibility struct {
	IsAll           bool            `json:"is_all,omitempty"`
	VisibleList     *AppVisibleList `json:"visible_list,omitempty"`
	InvisibleList   *AppVisibleList `json:"invisible_list,omitempty"`
	ForceSendFields []string        `json:"-"`
}

func (s *AppVisibility) MarshalJSON() ([]byte, error) {
	type cp AppVisibility
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppVisibleList struct {
	OpenIds         []int64  `json:"open_ids,omitempty"`
	DepartmentIds   []int64  `json:"department_ids,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppVisibleList) MarshalJSON() ([]byte, error) {
	type cp AppVisibleList
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Application struct {
	AppId            string         `json:"app_id,omitempty"`
	CreatorId        int64          `json:"creator_id,omitempty,string"`
	Status           int            `json:"status,omitempty"`
	SceneType        int            `json:"scene_type,omitempty"`
	RedirectUrls     []string       `json:"redirect_urls,omitempty"`
	OnlineVersionId  int64          `json:"online_version_id,omitempty,string"`
	UnauditVersionId int64          `json:"unaudit_version_id,omitempty,string"`
	AppName          string         `json:"app_name,omitempty"`
	AvatarUrl        string         `json:"avatar_url,omitempty"`
	Description      string         `json:"description,omitempty"`
	Scopes           []*AppScope    `json:"scopes,omitempty"`
	BackHomeUrl      string         `json:"back_home_url,omitempty"`
	I18n             []*AppI18nInfo `json:"i18n,omitempty"`
	PrimaryLanguage  string         `json:"primary_language,omitempty"`
	CommonCategories []string       `json:"common_categories,omitempty"`
	ForceSendFields  []string       `json:"-"`
}

func (s *Application) MarshalJSON() ([]byte, error) {
	type cp Application
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ApplicationAppVersion struct {
	AppId            string            `json:"app_id,omitempty"`
	Version          string            `json:"version,omitempty"`
	VersionId        int64             `json:"version_id,omitempty,string"`
	AppName          string            `json:"app_name,omitempty"`
	AvatarUrl        string            `json:"avatar_url,omitempty"`
	Description      string            `json:"description,omitempty"`
	Scopes           []*AppScope       `json:"scopes,omitempty"`
	BackHomeUrl      string            `json:"back_home_url,omitempty"`
	I18n             []*AppI18nInfo    `json:"i18n,omitempty"`
	CommonCategories []string          `json:"common_categories,omitempty"`
	Events           []string          `json:"events,omitempty"`
	Status           int               `json:"status,omitempty"`
	CreateTime       int64             `json:"create_time,omitempty,string"`
	PublishTime      int64             `json:"publish_time,omitempty,string"`
	Ability          *AppAbility       `json:"ability,omitempty"`
	Remark           *AppVersionRemark `json:"remark,omitempty"`
	ForceSendFields  []string          `json:"-"`
}

func (s *ApplicationAppVersion) MarshalJSON() ([]byte, error) {
	type cp ApplicationAppVersion
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ApplicationVisibility struct {
	IsAll           bool            `json:"is_all,omitempty"`
	VisibleList     *AppVisibleList `json:"visible_list,omitempty"`
	InvisibleList   *AppVisibleList `json:"invisible_list,omitempty"`
	ForceSendFields []string        `json:"-"`
}

func (s *ApplicationVisibility) MarshalJSON() ([]byte, error) {
	type cp ApplicationVisibility
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Block struct {
	BlockTypeId     string           `json:"block_type_id,omitempty"`
	VersionId       string           `json:"version_id,omitempty"`
	I18n            []*BlockI18nInfo `json:"i18n,omitempty"`
	MobileIconUrl   string           `json:"mobile_icon_url,omitempty"`
	PcIconUrl       string           `json:"pc_icon_url,omitempty"`
	ForceSendFields []string         `json:"-"`
}

func (s *Block) MarshalJSON() ([]byte, error) {
	type cp Block
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type BlockI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *BlockI18nInfo) MarshalJSON() ([]byte, error) {
	type cp BlockI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Bot struct {
	CardRequestUrl  string   `json:"card_request_url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Bot) MarshalJSON() ([]byte, error) {
	type cp Bot
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ClientBadgeNum struct {
	WebApp          int      `json:"web_app,omitempty"`
	Gadget          int      `json:"gadget,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ClientBadgeNum) MarshalJSON() ([]byte, error) {
	type cp ClientBadgeNum
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type CloudDocI18nInfo struct {
	I18nKey          string   `json:"i18n_key,omitempty"`
	Name             string   `json:"name,omitempty"`
	ReadDescription  string   `json:"read_description,omitempty"`
	WriteDescription string   `json:"write_description,omitempty"`
	ForceSendFields  []string `json:"-"`
}

func (s *CloudDocI18nInfo) MarshalJSON() ([]byte, error) {
	type cp CloudDocI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocsBlock struct {
	BlockTypeId     string           `json:"block_type_id,omitempty"`
	I18n            []*BlockI18nInfo `json:"i18n,omitempty"`
	MobileIconUrl   string           `json:"mobile_icon_url,omitempty"`
	PcIconUrl       string           `json:"pc_icon_url,omitempty"`
	ForceSendFields []string         `json:"-"`
}

func (s *DocsBlock) MarshalJSON() ([]byte, error) {
	type cp DocsBlock
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Gadget struct {
	EnablePcMode         int      `json:"enable_pc_mode,omitempty"`
	SchemaUrls           []string `json:"schema_urls,omitempty"`
	PcUseMobilePkg       bool     `json:"pc_use_mobile_pkg,omitempty"`
	PcVersion            string   `json:"pc_version,omitempty"`
	MobileVersion        string   `json:"mobile_version,omitempty"`
	MobileMinLarkVersion string   `json:"mobile_min_lark_version,omitempty"`
	PcMinLarkVersion     string   `json:"pc_min_lark_version,omitempty"`
	ForceSendFields      []string `json:"-"`
}

func (s *Gadget) MarshalJSON() ([]byte, error) {
	type cp Gadget
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MessageAction struct {
	PcAppLink       string                   `json:"pc_app_link,omitempty"`
	MobileAppLink   string                   `json:"mobile_app_link,omitempty"`
	I18n            []*MessageActionI18nInfo `json:"i18n,omitempty"`
	ForceSendFields []string                 `json:"-"`
}

func (s *MessageAction) MarshalJSON() ([]byte, error) {
	type cp MessageAction
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MessageActionI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *MessageActionI18nInfo) MarshalJSON() ([]byte, error) {
	type cp MessageActionI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MessageOverviewItem struct {
	PageView        int64    `json:"page_view,omitempty,string"`
	UniqueVisitor   int64    `json:"unique_visitor,omitempty,string"`
	ChatType        string   `json:"chat_type,omitempty"`
	MessageType     string   `json:"message_type,omitempty"`
	EventType       string   `json:"event_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *MessageOverviewItem) MarshalJSON() ([]byte, error) {
	type cp MessageOverviewItem
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Miniprogram struct {
	EnablePcMode         int      `json:"enable_pc_mode,omitempty"`
	SchemaUrls           []string `json:"schema_urls,omitempty"`
	PcUseMobilePkg       bool     `json:"pc_use_mobile_pkg,omitempty"`
	PcVersionId          string   `json:"pc_version_id,omitempty"`
	MobileVersionId      string   `json:"mobile_version_id,omitempty"`
	MobileMinLarkVersion string   `json:"mobile_min_lark_version,omitempty"`
	PcMinLarkVersion     string   `json:"pc_min_lark_version,omitempty"`
	ForceSendFields      []string `json:"-"`
}

func (s *Miniprogram) MarshalJSON() ([]byte, error) {
	type cp Miniprogram
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MsgAction struct {
	PcAppLink       string               `json:"pc_app_link,omitempty"`
	MobileAppLink   string               `json:"mobile_app_link,omitempty"`
	I18n            []*MsgActionI18nInfo `json:"i18n,omitempty"`
	ForceSendFields []string             `json:"-"`
}

func (s *MsgAction) MarshalJSON() ([]byte, error) {
	type cp MsgAction
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type MsgActionI18nInfo struct {
	I18nKey         string   `json:"i18n_key,omitempty"`
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *MsgActionI18nInfo) MarshalJSON() ([]byte, error) {
	type cp MsgActionI18nInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Navigate struct {
	Pc              *NavigateMeta `json:"pc,omitempty"`
	Mobile          *NavigateMeta `json:"mobile,omitempty"`
	ForceSendFields []string      `json:"-"`
}

func (s *Navigate) MarshalJSON() ([]byte, error) {
	type cp Navigate
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type NavigateMeta struct {
	Version         string   `json:"version,omitempty"`
	ImageUrl        string   `json:"image_url,omitempty"`
	HoverImageUrl   string   `json:"hover_image_url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *NavigateMeta) MarshalJSON() ([]byte, error) {
	type cp NavigateMeta
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type PlusMenu struct {
	PcAppLink       string   `json:"pc_app_link,omitempty"`
	MobileAppLink   string   `json:"mobile_app_link,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *PlusMenu) MarshalJSON() ([]byte, error) {
	type cp PlusMenu
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Scope struct {
	ScopeName       string   `json:"scope_name,omitempty"`
	GrantStatus     int      `json:"grant_status,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Scope) MarshalJSON() ([]byte, error) {
	type cp Scope
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UsageOverviewItem struct {
	PageView        int64    `json:"page_view,omitempty,string"`
	UniqueVisitor   int64    `json:"unique_visitor,omitempty,string"`
	DepartmentId    string   `json:"department_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UsageOverviewItem) MarshalJSON() ([]byte, error) {
	type cp UsageOverviewItem
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UsageTrendItem struct {
	Timestamp       int64    `json:"timestamp,omitempty,string"`
	PageView        int64    `json:"page_view,omitempty,string"`
	UniqueVisitor   int64    `json:"unique_visitor,omitempty,string"`
	ForceSendFields []string `json:"-"`
}

func (s *UsageTrendItem) MarshalJSON() ([]byte, error) {
	type cp UsageTrendItem
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type UsageUser struct {
	UserId          string   `json:"user_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *UsageUser) MarshalJSON() ([]byte, error) {
	type cp UsageUser
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type User struct {
	UserId          *UserId  `json:"user_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *User) MarshalJSON() ([]byte, error) {
	type cp User
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type WebApp struct {
	PcUrl           string   `json:"pc_url,omitempty"`
	MobileUrl       string   `json:"mobile_url,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *WebApp) MarshalJSON() ([]byte, error) {
	type cp WebApp
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type WorkplaceWidget struct {
	MinLarkVersion  string   `json:"min_lark_version,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *WorkplaceWidget) MarshalJSON() ([]byte, error) {
	type cp WorkplaceWidget
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ApplicationAppUsage struct {
	MetricName      string   `json:"metric_name,omitempty"`
	MetricValue     int      `json:"metric_value,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ApplicationAppUsage) MarshalJSON() ([]byte, error) {
	type cp ApplicationAppUsage
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type CloudDoc struct {
	SpaceUrl        string              `json:"space_url,omitempty"`
	I18n            []*CloudDocI18nInfo `json:"i18n,omitempty"`
	IconUrl         string              `json:"icon_url,omitempty"`
	Mode            int                 `json:"mode,omitempty"`
	ForceSendFields []string            `json:"-"`
}

func (s *CloudDoc) MarshalJSON() ([]byte, error) {
	type cp CloudDoc
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ApplicationAppUsageOverviewReqBody struct {
	Date            string   `json:"date,omitempty"`
	CycleType       int      `json:"cycle_type,omitempty"`
	DepartmentId    string   `json:"department_id,omitempty"`
	Ability         string   `json:"ability,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *ApplicationAppUsageOverviewReqBody) MarshalJSON() ([]byte, error) {
	type cp ApplicationAppUsageOverviewReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type ApplicationAppUsageOverviewResult struct {
	Items []*ApplicationAppUsage `json:"items,omitempty"`
}

type ApplicationVisibilityAddedEventData struct {
	Users  []*User `json:"users,omitempty"`
	Source int     `json:"source,omitempty"`
}

type ApplicationVisibilityAddedEvent struct {
	*model.BaseEventV2
	Event *ApplicationVisibilityAddedEventData `json:"event"`
}
